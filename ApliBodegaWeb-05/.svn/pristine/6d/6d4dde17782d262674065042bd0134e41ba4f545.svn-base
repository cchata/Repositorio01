package com.ecoinnova.pe.controller;

import java.io.Serializable;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;

import org.primefaces.context.RequestContext;
import org.primefaces.event.SelectEvent;

import com.ecoinnova.pe.model.TbCargoEntity;
import com.ecoinnova.pe.model.TbEmpleadoEntity;
import com.ecoinnova.pe.services.interfaces.TbEmpleadoServices;

@SessionScoped
@ManagedBean
public class EmpleadoController implements Serializable{

	private static final long serialVersionUID = 1L;

    @ManagedProperty("#{tbEmpleadoServices}")
	TbEmpleadoServices   tbEmpleadoServices;
	
    
	public EmpleadoController(){
		System.out.println("Llamando constructor EmpleadoController()");
		cargoBean = new TbCargoEntity();
	}
	
	
	private TbEmpleadoEntity       empleadoBean;
	private List<TbEmpleadoEntity> listaEmpleado;
	private TbEmpleadoEntity       empleadoBeanSelect;
	private TbCargoEntity          cargoBeanSelect;
	private TbCargoEntity          cargoBean;
	
	
	public TbCargoEntity getCargoBean() {
		return cargoBean;
	}
	public void setCargoBean(TbCargoEntity cargoBean) {
		this.cargoBean = cargoBean;
	}
	public TbEmpleadoEntity getEmpleadoBean() {
		return empleadoBean;
	}
	public void setEmpleadoBean(TbEmpleadoEntity empleadoBean) {
		this.empleadoBean = empleadoBean;
	}
	
		
    public TbCargoEntity getCargoBeanSelect() {
		return cargoBeanSelect;
	}
	public void setCargoBeanSelect(TbCargoEntity cargoBeanSelect) {
		this.cargoBeanSelect = cargoBeanSelect;
	}
	
	
	public void updateEmpleado() {
        String msg;
        
        try {
        	    empleadoBeanSelect.setTbCargo(cargoBeanSelect);
        	    tbEmpleadoServices.updateEmpleado(empleadoBeanSelect);
                msg = "Se modificó correctamente el registro.";
                FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO,"Cargo", msg);
                FacesContext.getCurrentInstance().addMessage(null, message);
                RequestContext.getCurrentInstance().update("growls");
                RequestContext.getCurrentInstance().execute("PF('dialogEmpleadoUpdate').hide()");
                
		} catch (Exception e) {
			 msg = ""+e.getMessage();
             FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error update", msg);
             FacesContext.getCurrentInstance().addMessage(null, message);
             RequestContext.getCurrentInstance().update("messages");
             RequestContext.getCurrentInstance().execute("PF('dialogEmpleadoUpdate').hide()");
		}
    }

    public void deleteEmpleado(){
    	String msg;
    	try {
    		tbEmpleadoServices.deleteEmpleado(empleadoBeanSelect);
//    		tbCargoServices.delete(cargoBeanSelect);
    		msg = "Se eliminó correctamente el registro.";
    	    FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO,"Cargo", msg);
            FacesContext.getCurrentInstance().addMessage(null, message);
            RequestContext.getCurrentInstance().update("growls");
            RequestContext.getCurrentInstance().execute("PF('dialogEmpleadoDelete').hide()");
			
		} catch (Exception e) {
			msg = ""+e.getMessage();
            FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error delete", msg);
            FacesContext.getCurrentInstance().addMessage(null, message);
            RequestContext.getCurrentInstance().update("messages");
            RequestContext.getCurrentInstance().execute("PF('dialogEmpleadoDelete').hide()");
		}
    }
	
	
	
    public void createEmpleado(){
    	String msg;
    	try {
    		empleadoBean.setTbCargo(cargoBean);
    		tbEmpleadoServices.insertEmpleado(empleadoBean);
    		msg = "Se creó correctamente el registro.";
    	    FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO,"Cargo", msg);
            FacesContext.getCurrentInstance().addMessage(null, message);
            RequestContext.getCurrentInstance().update("growls");
            RequestContext.getCurrentInstance().execute("PF('dlgEmpleadoCreate').hide()");
			
		} catch (Exception e) {
			msg = ""+e.getMessage();
            FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error insert", msg);
            FacesContext.getCurrentInstance().addMessage(null, message);
            RequestContext.getCurrentInstance().update("messages");
            RequestContext.getCurrentInstance().execute("PF('dlgEmpleadoCreate').hide()");
		}
    }
	
	
    
    
    public void cargarListaEmpleado(){
    	String msg;
    	try {
    		listaEmpleado = tbEmpleadoServices.findAllEmpleado();
    		msg = "Lista cargada";
    	    FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO,"Lista", msg);
            FacesContext.getCurrentInstance().addMessage(null, message);
//            RequestContext.getCurrentInstance().update("growls");
		} catch (Exception e) {
			msg = ""+e.getMessage();
            FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_ERROR, "Error cargar lista", msg);
            FacesContext.getCurrentInstance().addMessage(null, message);
//            RequestContext.getCurrentInstance().update("messages");
		}
    }
	
	
	
	public List<TbEmpleadoEntity> getListaEmpleado() {
		cargarListaEmpleado();
		return listaEmpleado;
	}
	public void setListaEmpleado(List<TbEmpleadoEntity> listaEmpleado) {
		this.listaEmpleado = listaEmpleado;
	}

	
	public void addSelectedEmpleado(TbEmpleadoEntity empleado){
		empleadoBeanSelect = empleado;
		cargoBeanSelect = empleadoBeanSelect.getTbCargo();
		if(cargoBeanSelect.getCodigoCar()!=null){
			System.out.println("cargoBeanSelect ok");
			System.out.println(cargoBeanSelect.getCodigoCar());
			System.out.println(cargoBeanSelect.getNombreCar());
		}else{
			System.out.println("cargoBeanSelect null");
		}
		
	}
	
	public TbEmpleadoEntity getEmpleadoBeanSelect() {
		return empleadoBeanSelect;
	}
	public void setEmpleadoBeanSelect(TbEmpleadoEntity empleadoBeanSelect) {
		this.empleadoBeanSelect = empleadoBeanSelect;
	}
	
	
	public void setTbEmpleadoServices(TbEmpleadoServices tbEmpleadoServices) {
		this.tbEmpleadoServices = tbEmpleadoServices;
	}
	
	public void resetEmpleado() throws Exception{
		cargoBean = new TbCargoEntity();
		cargoBeanSelect = new TbCargoEntity();
		empleadoBeanSelect = new TbEmpleadoEntity();
		empleadoBean  = new TbEmpleadoEntity();
		empleadoBean.setNombreEmp("");
		empleadoBean.setApellidosEmp("");
		empleadoBean.setDireccionEmp("");
		
		System.out.println("cargoBean.getCodigoCar()= "+cargoBean.getCodigoCar());
		System.out.println("empleadoBeanSelect.getCodigoEmp()= "+empleadoBeanSelect.getCodigoEmp());
		RequestContext.getCurrentInstance().update("formCreate");
//		RequestContext.getCurrentInstance().update("formUpdate:txtIdCargo");
//		RequestContext.getCurrentInstance().update("formUpdate:txtNombCargo");
//		RequestContext.getCurrentInstance().update("formCreate:txtIdCargo");
//		RequestContext.getCurrentInstance().update("formCreate:txtNombCargo");
		empleadoBean.setCodigoEmp((tbEmpleadoServices.generarCodigoEmpleado()));
		RequestContext.getCurrentInstance().update("formCreate:txtCodigo");
		RequestContext.getCurrentInstance().update("formCreate:txtIdCargo");
		RequestContext.getCurrentInstance().update("formCreate:txtNombCargo");
		
	}
	
	public void onRowSelect(SelectEvent event){
//		this.cargoBeanSelect = carg;
		cargoBean = ((TbCargoEntity) event.getObject());
		
		if(empleadoBeanSelect.getCodigoEmp()!=null){
//			cargoBean = ((TbCargoEntity) event.getObject());
//			RequestContext.getCurrentInstance().update("formUpdate:txtIdCargo");
//			RequestContext.getCurrentInstance().update("formUpdate:txtNombCargo");
			
//			RequestContext.getCurrentInstance().update("formUpdate");
//			cargoBean = ((TbCargoEntity) event.getObject());
//			RequestContext.getCurrentInstance().execute("PF('dialogEmpleadoUpdate').show()");
			
			Collection<String> colUpdate = new HashSet<String>();
			colUpdate.add("formUpdate:txtIdCargo");
			colUpdate.add("formUpdate:txtNombCargo");
			cargoBeanSelect = ((TbCargoEntity) event.getObject());
			RequestContext.getCurrentInstance().update(colUpdate);
			
		}else{
			
//			cargoBean = ((TbCargoEntity) event.getObject());
//			RequestContext.getCurrentInstance().update("formCreate:txtIdCargo");
//			RequestContext.getCurrentInstance().update("formCreate:txtNombCargo");
			
//			RequestContext.getCurrentInstance().update("formCreate");
//			cargoBean = ((TbCargoEntity) event.getObject());
//			RequestContext.getCurrentInstance().execute("PF('dlgEmpleadoCreate').show()");
			
			Collection<String> colCreater = new HashSet<String>();
			colCreater.add("formCreate:txtIdCargo");
			colCreater.add("formCreate:txtNombCargo");
			cargoBean = ((TbCargoEntity) event.getObject());
			RequestContext.getCurrentInstance().update(colCreater);

		}
		System.out.println(((TbCargoEntity) event.getObject()).getCodigoCar());
		System.out.println(((TbCargoEntity) event.getObject()).getNombreCar());
		
	}
	

}
